on: [push, pull_request]

name: Continuous Integration

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    strategy:
      matrix:
        notestore: [ "InMemory", "PostgreSQL" ]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: notegraf
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      NOTEGRAF_PORT: "8000" # not used for test
      NOTEGRAF_DEBUG: "true"
      NOTEGRAF_NOTESTORETYPE: ${{ matrix.notestore }}
      NOTEGRAF_DATABASE_HOST: "localhost"
      NOTEGRAF_DATABASE_PORT: "5432"
      NOTEGRAF_DATABASE_USERNAME: "postgres"
      NOTEGRAF_DATABASE_PASSWORD: "password"
      NOTEGRAF_DATABASE_NAME: "notegraf"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    strategy:
      matrix:
        notestore: ["InMemory", "PostgreSQL"]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: notegraf
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      NOTEGRAF_PORT: "8000" # not used for test
      NOTEGRAF_DEBUG: "true"
      NOTEGRAF_NOTESTORETYPE: ${{ matrix.notestore }}
      NOTEGRAF_DATABASE_HOST: "localhost"
      NOTEGRAF_DATABASE_PORT: "5432"
      NOTEGRAF_DATABASE_USERNAME: "postgres"
      NOTEGRAF_DATABASE_PASSWORD: "password"
      NOTEGRAF_DATABASE_NAME: "notegraf"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--ignore-tests'
          out-type: 'Html'
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-report-html-${{ matrix.notestore }}
          path: tarpaulin-report.html
